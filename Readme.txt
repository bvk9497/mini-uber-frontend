
Frontend : ReactJS, Sass
Created three Pages with Reactjs for 
1. Adding Cab
2. Add Rider
3. Edit Cab
4. Home

Created Reusable Components 
1.Booked Cab
2. Cab Item
3. Navbar
4. Random User


=>Default page ==> Homepage
	Divided into 3 parts
	=> First part
	Shows Current Rider details
	Can generate random Rider from available Riders

	=>Second Part
	Shows Available cars for the Current user
	->Book Cab button
	If cab is in threshold  => Booking will be successfull else it shows alert
	if cab is booked => details updated (current user =>booked:true , cab=> booked:true)
	->Edit cab button
	Able to change status of Cab active/inactive
	
	=>Third part
	Shows one Most Recent booking of the Current user.
	->End Trip button
	(current user =>booked:false , cab=> booked:false)
	and closes the current trip

	=>You can Configure threshold in the top right input.
	->User can book cab as per threshold set.
	
=>Adding Cab page
	Form with 
	->name
	->x =>autogenerated(0,50)
	->y =>autogenerated(0,50)
	->status=>default : active
	->booked => default false
	up on save => data is saved to db

=>Adding Rider page
	Form with 
	->name
	->x =>autogenerated(0,50)
	->y =>autogenerated(0,50)
	->booked => default false
	up on save => data is saved to db

=>Edit Cab page
	Form with 
	->name
	->x =>autogenerated(0,50)
	->y =>autogenerated(0,50)
	-status=> EDITABLE
	up on save => data is saved to db

===============================================================

Backend :NodeJS, ExpressJS, Mongoose(MongoDB)
1. Created local server with port 5000
2. Connected to MongoDB AWS based database
3. Created APIRoutes and mongoose models for
=>Cab to Create, Read and Update
=>Rider to Create, Read and Update

   {=>trip Create, Read and delete}



Procedure to Start
====================
1. Backend
----------
1.goto directory mediamint\backend>
2. npm install
3. npm start

backend will be connected to mongodb mediamint database in bvk account

2.Frontend
-----------
1.goto directory mediamint\frontend>
2. npm install
3. npm start

will retrieve data from backend connected to mediamint and will display and allow you to operate.

Worked on the basic functionality of Application